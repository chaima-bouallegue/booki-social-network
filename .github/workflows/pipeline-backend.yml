name: Build and Deploy Backend Image

on:
  push:
    branches:
      - ci/pipeline
    paths:
      - 'book-network/**'
      - 'docker/backend/**'
      - 'docker-compose.yml'
      - '.github/workflows/*-backend.yml'

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile Spring Boot Backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Compile project
        run: |
          cd book-network
          mvn clean compile

  unit-tests:
    runs-on: ubuntu-latest
    name: Run Unit Tests
    needs: compile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Run unit tests
        run: |
          cd book-network
          mvn test

  build:
    runs-on: ubuntu-latest
    name: Build Backend JAR
    needs: [compile, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build project with Maven
        run: |
          cd book-network
          mvn clean package -DskipTests

  build-image:
    runs-on: ubuntu-latest
    name: Build and Push Backend Docker Image
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract project version
        id: extract_version
        run: |
          cd book-network
          VERSION=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: book-network
          file: docker/backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/bsn-api:${{ steps.extract_version.outputs.version }}
            ${{ secrets.DOCKER_USERNAME }}/bsn-api:latest
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.version }}